Index: src/main/java/data/DataHandlerSQL.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/data/DataHandlerSQL.java	(date 1571339927834)
+++ src/main/java/data/DataHandlerSQL.java	(date 1571339927834)
@@ -0,0 +1,75 @@
+package data;
+
+import Model.Arrangement;
+import Model.ArrangementKlasser.Lop;
+import Model.ArrangementKlasser.Renn;
+import Model.ArrangementKlasser.Ritt;
+import javafx.collections.FXCollections;
+import javafx.collections.ObservableList;
+
+import java.sql.*;
+import java.time.LocalDate;
+import java.time.LocalDateTime;
+import java.time.LocalTime;
+
+public class DataHandlerSQL {
+    private final static ObservableList<Arrangement> arrangementListeLop = FXCollections.observableArrayList();
+    private final static ObservableList<Arrangement> arrangementListeRenn = FXCollections.observableArrayList();
+    private final static ObservableList<Arrangement> arrangementListeRitt = FXCollections.observableArrayList();
+
+    private static LocalDateTime datoConvert(String datoS, String tidS) {
+        LocalDate dato = LocalDate.parse(datoS);
+        LocalTime tid = LocalTime.parse(tidS);
+        return LocalDateTime.of(dato, tid);
+    }
+
+    private Connection SQLConnect() {
+        Connection conn = null;
+        try {
+            String URL = "jdbc:sqlite:src/main/resources/Data/arrangementer.db";
+            conn = DriverManager.getConnection(URL);
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+        return conn;
+    }
+
+    public ObservableList<Arrangement> getArrangementTypeRitt() {
+        genererArrangementer();
+        return arrangementListeRitt;
+    }
+    public ObservableList<Arrangement> getArrangementTypeRenn() {
+        genererArrangementer();
+        return arrangementListeRenn;
+    }
+    public static ObservableList<Arrangement> getArrangementTypeLop() {
+        return arrangementListeLop;
+    }
+
+    private void genererArrangementer() {
+        String sql = "SELECT * FROM Tider NATURAL JOIN Arrangementer";
+
+        try (Connection conn = this.SQLConnect();
+             Statement stmt = conn.createStatement();
+             ResultSet rs = stmt.executeQuery(sql)) {
+
+            while (rs.next()) {
+                String Dato = rs.getString(7);
+                String Time = rs.getString(6);
+                String Type = rs.getString(5);
+                String NavnArrangement = rs.getString(4);
+                String StartTid = rs.getString(2);
+                String StoppTid = rs.getString(3);
+                if(Type.equals("Sykkel")){
+                    arrangementListeRitt.add(new Ritt(NavnArrangement,"Askim",datoConvert(Dato,Time)));
+                }else if (Type.equals("Ski")){
+                    arrangementListeRenn.add(new Renn(NavnArrangement,"Askim",datoConvert(Dato,Time)));
+                }else if(Type.equals("Løp")){
+                    arrangementListeLop.add(new Lop(NavnArrangement,"Askim",datoConvert(Dato,Time)));
+                }
+            }
+        } catch (SQLException e) {
+            System.out.println(e.getMessage());
+        }
+    }
+}
Index: src/main/java/Controller/ArrangementOversiktController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Controller;\r\n\r\nimport Model.Arrangement;\r\nimport Model.ArrangementKlasser.Lop;\r\nimport Model.ArrangementKlasser.Renn;\r\nimport Model.ArrangementKlasser.Ritt;\r\nimport Model.BrukerType;\r\nimport Model.ModelBruker;\r\nimport data.InnloggetBruker;\r\nimport data.DataHandler;\r\nimport javafx.beans.property.ReadOnlyObjectWrapper;\r\nimport javafx.beans.property.ReadOnlyStringWrapper;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.text.Text;\r\nimport main.Main;\r\n\r\npublic class ArrangementOversiktController {\r\n\r\n    static String arrangementType;\r\n    private BrukerType innloggetBruker = BrukerController.getInnloggetBruker().getInnloggetBruker();\r\n    @FXML private TableView<Arrangement> arrangementTableView;\r\n    @FXML private TableColumn<Arrangement, String> stedTableColumn, navnTableColumn, datoTableColumn;\r\n    @FXML private Text arrangementTypeTextField;\r\n    @FXML private Button tilbakeButton;\r\n    @FXML private Label brukerID;\r\n\r\n    public void initialize() {\r\n\r\n        brukerID.setText(innloggetBruker.getForNavn());\r\n\r\n        ObservableList<Arrangement> arrangementList = DataHandler.getArrangementer();\r\n        arrangementTypeTextField.setText(arrangementType);\r\n\r\n        //Refatoreiet kode\r\n        for (Arrangement arrangement : arrangementList)\r\n            switch (arrangementType) {\r\n                case \"Skirenn\":\r\n                    if (arrangement instanceof Renn) {\r\n                        arrangementTableView.getItems().add(arrangement);\r\n                    }\r\n                    break;\r\n                case \"Sykkelritt\":\r\n                    if (arrangement instanceof Ritt) {\r\n                        arrangementTableView.getItems().add(arrangement);\r\n                    }\r\n                    break;\r\n                case \"Løp\":\r\n                    if (arrangement instanceof Lop) {\r\n                        arrangementTableView.getItems().add(arrangement);\r\n                    }\r\n                    break;\r\n            }\r\n        stedTableColumn.setCellValueFactory(cellData -> new ReadOnlyStringWrapper(cellData.getValue().getSted()));\r\n        navnTableColumn.setCellValueFactory(cellData -> new ReadOnlyStringWrapper(cellData.getValue().getNavn()));\r\n        datoTableColumn.setCellValueFactory(cellData -> new ReadOnlyObjectWrapper(cellData.getValue().getDatoOgTid()));\r\n        tilbakeButton.setOnAction(actionEvent -> Main.getInstance().changeScene(\"../View/ViewFrontPage.fxml\"));\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/Controller/ArrangementOversiktController.java	(date 1571331092000)
+++ src/main/java/Controller/ArrangementOversiktController.java	(date 1571340180862)
@@ -6,6 +6,7 @@
 import Model.ArrangementKlasser.Ritt;
 import Model.BrukerType;
 import Model.ModelBruker;
+import data.DataHandlerSQL;
 import data.InnloggetBruker;
 import data.DataHandler;
 import javafx.beans.property.ReadOnlyObjectWrapper;
@@ -29,14 +30,29 @@
     @FXML private Button tilbakeButton;
     @FXML private Label brukerID;
 
+    private static ObservableList<Arrangement> arrangementListRenn = new DataHandlerSQL().getArrangementTypeRenn();
+    private static ObservableList<Arrangement> arrangementListRitt = new DataHandlerSQL().getArrangementTypeRitt();
+    private static ObservableList<Arrangement> arrangementListLop = new DataHandlerSQL().getArrangementTypeLop();
+
     public void initialize() {
-
-        brukerID.setText(innloggetBruker.getForNavn());
-
+        //ObservableList<Arrangement> arrangementListLop = DataHandlerSQL.getArrangementTypeLop();
         ObservableList<Arrangement> arrangementList = DataHandler.getArrangementer();
+        brukerID.setText(innloggetBruker.getForNavn());
+        //ObservableList<Arrangement> arrangementListRenn = new DataHandlerSQL().getArrangementTypeRenn();
+        //ObservableList<Arrangement> arrangementListRitt = new DataHandlerSQL().getArrangementTypeRitt();
+        //ObservableList<Arrangement> arrangementListLop = new DataHandlerSQL().getArrangementTypeLop();
         arrangementTypeTextField.setText(arrangementType);
 
         //Refatoreiet kode
+
+        for(Arrangement arrangement : arrangementListLop){
+            System.out.println(arrangementListLop);
+            /*if(arrangementListLop.get(5).equals("Løp"))
+                if (arrangement instanceof Lop) {
+                    arrangementTableView.getItems().add(arrangement);
+                }*/
+            }
+
         for (Arrangement arrangement : arrangementList)
             switch (arrangementType) {
                 case "Skirenn":
Index: src/main/java/Controller/BrukerController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Controller;\r\n\r\nimport data.InnloggetBruker;\r\nimport Model.BrukerType;\r\nimport Model.ModelBruker;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport main.Main;\r\n\r\npublic class BrukerController {\r\n\r\n    @FXML private ComboBox<BrukerType> brukerListe;\r\n    @FXML private Button brukerLoggInn, skirennButton, lopButton, sykkelrittButton;\r\n    @FXML private Label valgtBrukerNavnLabel;\r\n    @FXML private ImageView imgSki,imgSykkel,imgLop;\r\n\r\n    private ObservableList<BrukerType> listeBrukere = ModelBruker.listeBruker();\r\n\r\n    public static InnloggetBruker getInnloggetBruker() {\r\n        return innloggetBruker;\r\n    }\r\n\r\n    private static InnloggetBruker innloggetBruker;\r\n\r\n    public void initialize() {\r\n\r\n        imgForhand();\r\n\r\n\r\n        if (innloggetBruker != null){\r\n            valgtBrukerNavnLabel.setText(innloggetBruker.getInnloggetBruker().getForNavn());\r\n        }\r\n\r\n        brukerListe.setItems(listeBrukere);\r\n        brukerListe.getSelectionModel().selectFirst();\r\n\r\n        brukerLoggInn.setOnAction(actionEvent -> {\r\n            innloggetBruker = new InnloggetBruker(brukerListe.getSelectionModel().getSelectedItem());\r\n            valgtBrukerNavnLabel.setText(innloggetBruker.getInnloggetBruker().getForNavn());\r\n        });\r\n\r\n        skirennButton.setOnAction(getActionEventEventHandler(\"renn\"));\r\n        sykkelrittButton.setOnAction(getActionEventEventHandler(\"ritt\"));\r\n        lopButton.setOnAction(getActionEventEventHandler(\"lop\"));\r\n    }\r\n\r\n    private EventHandler<ActionEvent> getActionEventEventHandler(String arrangementType) {\r\n        return actionEvent -> {\r\n            switch (arrangementType){\r\n                case \"renn\":\r\n                    ArrangementOversiktController.arrangementType = \"Skirenn\";\r\n                    break;\r\n                case \"ritt\":\r\n                    ArrangementOversiktController.arrangementType = \"Sykkelritt\";\r\n                    break;\r\n                case \"lop\":\r\n                    ArrangementOversiktController.arrangementType = \"Løp\";\r\n                    break;\r\n                default:\r\n                    throw new IllegalStateException(\"Unexpected value: \" + arrangementType);\r\n            }\r\n            Main.getInstance().changeScene(\"../View/ArrangementOversiktView.fxml\");\r\n        };\r\n    }\r\n\r\n    private void imgForhand(){\r\n        imgLop.setImage(new Image(\"/img/lop.jpg\"));\r\n        imgSki.setImage(new Image(\"/img/ski.jpg\"));\r\n        imgSykkel.setImage(new Image(\"/img/sykkel.jpg\"));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/Controller/BrukerController.java	(date 1571331092000)
+++ src/main/java/Controller/BrukerController.java	(date 1571340218668)
@@ -1,6 +1,5 @@
 package Controller;
 
-import data.InnloggetBruker;
 import Model.BrukerType;
 import Model.ModelBruker;
 import javafx.collections.ObservableList;
@@ -15,7 +14,6 @@
 import main.Main;
 
 public class BrukerController {
-
     @FXML private ComboBox<BrukerType> brukerListe;
     @FXML private Button brukerLoggInn, skirennButton, lopButton, sykkelrittButton;
     @FXML private Label valgtBrukerNavnLabel;
@@ -23,27 +21,15 @@
 
     private ObservableList<BrukerType> listeBrukere = ModelBruker.listeBruker();
 
-    public static InnloggetBruker getInnloggetBruker() {
-        return innloggetBruker;
-    }
-
-    private static InnloggetBruker innloggetBruker;
-
-    public void initialize() {
-
+    public void initialize() throws Exception {
         imgForhand();
-
-
-        if (innloggetBruker != null){
-            valgtBrukerNavnLabel.setText(innloggetBruker.getInnloggetBruker().getForNavn());
-        }
-
+        valgtBrukerNavnLabel.setText("Ukjent");
         brukerListe.setItems(listeBrukere);
         brukerListe.getSelectionModel().selectFirst();
 
         brukerLoggInn.setOnAction(actionEvent -> {
-            innloggetBruker = new InnloggetBruker(brukerListe.getSelectionModel().getSelectedItem());
-            valgtBrukerNavnLabel.setText(innloggetBruker.getInnloggetBruker().getForNavn());
+            String Navn = brukerListe.getSelectionModel().getSelectedItem().toString();
+            valgtBrukerNavnLabel.setText(Navn);
         });
 
         skirennButton.setOnAction(getActionEventEventHandler("renn"));
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>hiof.group25</groupId>\r\n    <artifactId>Arrangement_tracker</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n    <properties>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n        <maven.compiler.source>1.8</maven.compiler.source>\r\n        <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>\r\n        <junit.jupiter.version>5.5.2</junit.jupiter.version>\r\n    </properties>\r\n\r\n    <dependencies>\r\n    <!-- https://mvnrepository.com/artifact/org.openjfx/javafx -->\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx</artifactId>\r\n            <version>11</version>\r\n            <type>pom</type>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.testfx</groupId>\r\n            <artifactId>testfx-core</artifactId>\r\n            <version>4.0.16-alpha</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <!-- https://mvnrepository.com/artifact/org.testfx/testfx-junit5 -->\r\n        <dependency>\r\n            <groupId>org.testfx</groupId>\r\n            <artifactId>testfx-junit5</artifactId>\r\n            <version>4.0.16-alpha</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-controls</artifactId>\r\n            <version>12.0.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter</artifactId>\r\n            <version>${junit.jupiter.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n    </dependencies>\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.8.1</version>\r\n            </plugin>\r\n            <plugin>\r\n                <artifactId>maven-surefire-plugin</artifactId>\r\n                <version>2.22.2</version>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.8.0</version>\r\n                <configuration>\r\n                    <source>13</source>\r\n                    <target>13</target>\r\n                    <release>13</release>\r\n                </configuration>\r\n            </plugin>\r\n\r\n        <plugin>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-maven-plugin</artifactId>\r\n            <version>0.0.3</version>\r\n            <configuration>\r\n                <mainClass>Main</mainClass>\r\n            </configuration>\r\n        </plugin>\r\n\r\n        </plugins>\r\n    </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(date 1571331092000)
+++ pom.xml	(date 1571331163723)
@@ -42,6 +42,12 @@
             <artifactId>javafx-controls</artifactId>
             <version>12.0.2</version>
         </dependency>
+        <!-- https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc -->
+        <dependency>
+            <groupId>org.xerial</groupId>
+            <artifactId>sqlite-jdbc</artifactId>
+            <version>3.28.0</version>
+        </dependency>
         <dependency>
             <groupId>org.junit.jupiter</groupId>
             <artifactId>junit-jupiter</artifactId>
Index: src/main/java/main/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class Main extends Application {\r\n\r\n    private Stage primaryStage;\r\n    private static Main instance;\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) throws Exception {\r\n        //Setter den globale variabelen primarystage til å være dette staget\r\n        this.primaryStage = primaryStage;\r\n\r\n        //Lager en instance slik at vi kan bruke metodene her i andre klasser\r\n        instance = this;\r\n\r\n        Parent root = FXMLLoader.load(getClass().getResource(\"../View/ViewFrontPage.fxml\"));\r\n        primaryStage.setTitle(\"App v0.2a\");\r\n        primaryStage.setScene(new Scene(root, 800, 600));\r\n        primaryStage.show();\r\n    }\r\n\r\n    public void changeScene(String fxml_path) {\r\n        try {\r\n            Parent pane = FXMLLoader.load(\r\n                    getClass().getResource(fxml_path)\r\n            );\r\n            primaryStage.getScene().setRoot(pane);\r\n\r\n        } catch (IOException IOE){\r\n            IOE.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    public static Main getInstance() {\r\n        return instance;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/main/Main.java	(date 1571331092000)
+++ src/main/java/main/Main.java	(date 1571337314263)
@@ -1,5 +1,6 @@
 package main;
 
+import data.DataHandlerSQL;
 import javafx.application.Application;
 import javafx.fxml.FXMLLoader;
 import javafx.scene.Parent;
